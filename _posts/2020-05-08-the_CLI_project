Dear Flatiron Diary,

I like taking notes. A lot.
I like writing things out. A lot.
I like writing things in long-hand.
I like planning, and outlining, and catering to endless post-it notes and notebooks and stationary splurges.

Why? Because it's so much easier to focus that way, for me.

Initially, I found pseudocoding to remind me of essay writing. Not the good kind of essay writing, you know the kind, about stuff you are really super into and nerd out about. No, more like writing an essay about things you groan and instantly fall asleep to. I dodged pseudocoding as much as I could.

My code would be jumbled around, split up with nonsensical comments everywhere. I lost my place often. Too often, really. Tasks seemed overwhelming as I went straight to code, programming looking more and more like a distant dream I would tell strangers about in my homeless, broke, and starving future-life. I was agonizing over my broken codes, every night, every black-out curtained day, for forever.

The aha-moment: psuedocoding is actually a comfort during distressed times of errors and mental instability.

After some nagging from the professionals, I gave it a real go. 

Finally, employing the method made my thought processes during coding so much more fluid.
There is something about the visuals of syntaxes that appeal to me and themes in editors made colors pop in ways my post-it notes did in textbooks and binders. 

I got really into it. I even became a pseudocode-warrior in class, study groups, and pair-programming, literally shouting at people about it. (I thought I was being silly and funny, turned out it made me look like the bad kind of whacko..I apologize to all of you now.)

What I never took into consideration, was how troublesome this passion for pseudocode could become.

My mountains of comments and written out brain-storming ended up confusing me when I tackled my CLI project. At first, I thought it looked amazing and professional and gold-star worthy. But after lots and lots of lines of code, it started happening again..my code was jumbled and split up with even more nonsense than before. Trying to explain my code to other humans was aggravating because they never really seemed to take the time to read my comments- but when I *really* watched them, I could see how my comments would confuse and hinder their flow when trying to work with me.

Ultimately, my OWN confusion from my OWN overwhelming stack of notes, comments, and notepad files, and (I could literally go on and on here..) wrecked my ability to work effectively and efficiently, slaying me with being unable to meet deadlines. I have never had this "skill" work against me before and this was quite a ride to behold. The blows to my ego failed me harder than error messages to my actual code.

Some stuff I learned along this CLI-project-catastrophe way:
-Learn to learn and learn to adjust.
-Occam's Razor is legit.
-Succinct is success.
-Transfer skills from other places you normally wouldn't.
-Listen to your heart, and take breaks when you sweat.
-This is fun. For real.
-Learn how to be fluid in ways that don't always adhere to your version of reality.

Oh, goodness, me.. I'm doing it again..
-end of entry
